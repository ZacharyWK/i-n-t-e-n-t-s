[{"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\index.js":"1","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\reportWebVitals.js":"2","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\App.js":"3","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Home.js":"4","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\SingleThought.js":"5","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Signup.js":"6","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Login.js":"7","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\Footer\\index.js":"8","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\utils\\queries.js":"10","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\utils\\mutations.js":"11","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\utils\\auth.js":"12","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\CommentList\\index.js":"13","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtList\\index.js":"14","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtForm\\index.js":"15","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\CommentForm\\index.js":"16","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Backplate.js":"17","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Search.js":"18","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Blogs.js":"19","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\Background\\index.js":"20"},{"size":500,"mtime":1628575382362,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1628575382366,"results":"23","hashOfConfig":"22"},{"size":2110,"mtime":1628643591130,"results":"24","hashOfConfig":"22"},{"size":699,"mtime":1628644933631,"results":"25","hashOfConfig":"22"},{"size":1159,"mtime":1628646897670,"results":"26","hashOfConfig":"22"},{"size":2652,"mtime":1628650445475,"results":"27","hashOfConfig":"22"},{"size":2533,"mtime":1628650395602,"results":"28","hashOfConfig":"22"},{"size":605,"mtime":1628599728231,"results":"29","hashOfConfig":"22"},{"size":947,"mtime":1628644863429,"results":"30","hashOfConfig":"22"},{"size":687,"mtime":1628575382368,"results":"31","hashOfConfig":"22"},{"size":2252,"mtime":1628579362951,"results":"32","hashOfConfig":"22"},{"size":1043,"mtime":1628575382367,"results":"33","hashOfConfig":"22"},{"size":910,"mtime":1628647211042,"results":"34","hashOfConfig":"22"},{"size":1009,"mtime":1628618261450,"results":"35","hashOfConfig":"22"},{"size":2789,"mtime":1628649120392,"results":"36","hashOfConfig":"22"},{"size":2399,"mtime":1628645804723,"results":"37","hashOfConfig":"22"},{"size":2104,"mtime":1628639151863,"results":"38","hashOfConfig":"22"},{"size":4497,"mtime":1628628946201,"results":"39","hashOfConfig":"22"},{"size":1004,"mtime":1628613568267,"results":"40","hashOfConfig":"22"},{"size":740,"mtime":1628612813864,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1etpl13",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\index.js",[],["89","90"],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\reportWebVitals.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\App.js",["91","92","93"],"import React from \"react\";\nimport \"./index.css\";\n\nimport styled, { css } from \"styled-components\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"./utils/auth\";\n// import Background from  \"./components/Background\"\nimport Backplate from \"./pages/Backplate\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\n// import Home from \"./pages/Home\";\n// import Search from \"./pages/Search\";\n// import Blogs from \"./pages/Blogs\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {/* <Background/> */}\n      <Router>\n        <div class=\"wrapper\">\n          <div className=\"content\">\n            <Route\n              path=\"/login\"\n              render={() => (Auth.loggedIn() ? <Redirect to=\"/\" /> : <Login />)}\n            />\n\n            <Route\n              path=\"/\"\n              render={() =>\n                Auth.loggedIn() ? <Backplate /> : <Redirect to=\"/login\" />\n              }\n            />\n\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Home.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Signup.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Login.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\Footer\\index.js",["94","95"],"import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {/* {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => history.goBack()}\n          >\n            &larr; Go Back\n          </button>\n        )} */}\n        <h4>\n\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\Header\\index.js",["96","97","98"],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\utils\\queries.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\utils\\mutations.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\utils\\auth.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtForm\\index.js",["99"],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\CommentForm\\index.js",["100"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport \"./style.css\"\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <h3>What you doing?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"postButton\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                <h4><b>POST</b>it</h4>\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in!{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Backplate.js",["101","102","103","104","105","106"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nimport Header from \"../components/Header\";\nimport Home from \"./Home\";\nimport Search from \"./Search\";\nimport Blogs from \"./Blogs\";\nimport SingleThought from \"./SingleThought\";\nimport Footer from \"../components/Footer\";\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: \"/graphql\",\n  });\n  \n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(\"id_token\");\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  });\n  \n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n\nfunction Backplate() {\n    return (\n    <ApolloProvider client={client}>\n      <Router>\n          <Header />\n            <div className=\"container\">\n\n\n                <Route exact path=\"/\"><Home /></Route>\n\n                <Switch>\n\n                  <Route path=\"/search\"><Search /></Route>\n\n                  <Route path=\"/home\"><Home /></Route>\n\n                  <Route path=\"/blog\"><SingleThought /></Route>\n\n                </Switch>\n          </div>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\nconst Container = styled.div`\n// position: \"fixed\";\n// background-color:#314131;\n`\n\nconst Backing = styled.div`\n// color:#718161;\n// background-color: rgba(49,65,49,1);\n`\n\nexport default Backplate;","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Search.js",["107","108","109","110"],"import React, { useState } from \"react\";\nimport Blogs from \"./Blogs\";\nimport axios from \"axios\";\nimport \"./css/search.css\";\nimport styled, { css } from \"styled-components\";\n\nconst Search = () => {\n  const [selection, setSelection] = useState();\n  console.log(selection);\n\n  const [results, setResults] = useState();\n\n  const [showBlog, setShowBlog] = useState(false);\n\n  const [park, setPark] = useState();\n\n  const findParks = async () => {\n    const response = await axios.get(`/api/parks/${selection}`);\n    console.log(\"<<<<LOG FOR REF>>>>> \", response.data.data);\n    setResults(response.data.data);\n  };\n\n  const handleChange = (e) => setSelection(e.target.value);\n\n  const openParkBlog = (parkId) => {\n    setPark(results.find(({ id }) => id === parkId));\n    setShowBlog(true);\n  };\n\n  if (showBlog) {\n    return <Blogs park={park} setShowBlog={setShowBlog} />;\n  }\n\n  return (\n    <main className=\"mainSearch\">\n      <div className=\"searchInput\">\n        <p className=\"question\"></p>\n\n        <select onChange={(e) => handleChange(e)}>\n          <option>choose state</option>\n          <option value=\"AL\">Alabama</option>\n          <option value=\"AK\">Alaska</option>\n          <option value=\"AZ\">Arizona</option>\n          <option value=\"AR\">Arkansas</option>\n          <option value=\"CA\">California</option>\n          <option value=\"CO\">Colorado</option>\n          <option value=\"CT\">Connecticut</option>\n          <option value=\"DE\">Delaware</option>\n          <option value=\"DC\">District Of Columbia</option>\n          <option value=\"FL\">Florida</option>\n          <option value=\"GA\">Georgia</option>\n          <option value=\"HI\">Hawaii</option>\n          <option value=\"ID\">Idaho</option>\n          <option value=\"IL\">Illinois</option>\n          <option value=\"IN\">Indiana</option>\n          <option value=\"IA\">Iowa</option>\n          <option value=\"KS\">Kansas</option>\n          <option value=\"KY\">Kentucky</option>\n          <option value=\"LA\">Louisiana</option>\n          <option value=\"ME\">Maine</option>\n          <option value=\"MD\">Maryland</option>\n          <option value=\"MA\">Massachusetts</option>\n          <option value=\"MI\">Michigan</option>\n          <option value=\"MN\">Minnesota</option>\n          <option value=\"MS\">Mississippi</option>\n          <option value=\"MO\">Missouri</option>\n          <option value=\"MT\">Montana</option>\n          <option value=\"NE\">Nebraska</option>\n          <option value=\"NV\">Nevada</option>\n          <option value=\"NH\">New Hampshire</option>\n          <option value=\"NJ\">New Jersey</option>\n          <option value=\"NM\">New Mexico</option>\n          <option value=\"NY\">New York</option>\n          <option value=\"NC\">North Carolina</option>\n          <option value=\"ND\">North Dakota</option>\n          <option value=\"OH\">Ohio</option>\n          <option value=\"OK\">Oklahoma</option>\n          <option value=\"OR\">Oregon</option>\n          <option value=\"PA\">Pennsylvania</option>\n          <option value=\"RI\">Rhode Island</option>\n          <option value=\"SC\">South Carolina</option>\n          <option value=\"SD\">South Dakota</option>\n          <option value=\"TN\">Tennessee</option>\n          <option value=\"TX\">Texas</option>\n          <option value=\"UT\">Utah</option>\n          <option value=\"VT\">Vermont</option>\n          <option value=\"VA\">Virginia</option>\n          <option value=\"WA\">Washington</option>\n          <option value=\"WV\">West Virginia</option>\n          <option value=\"WI\">Wisconsin</option>\n          <option value=\"WY\">Wyoming</option>\n        </select>\n\n        <button id=\"stateSearch\" onClick={findParks}>\n          SEARCH\n        </button>\n      </div>\n\n      {\n      results ? results.map((park) => (\n            <div className=\"parkCard\">\n              <a class=\"singleCard\" onClick={() => openParkBlog(park.id)}>\n                <div class=\"cardTitle\" key={park.id}>\n                  {park.name}\n                </div>\n                <img class=\"parkImg\" src={park.images[0].url} height=\"200\" />\n                <ul class=\"info\">\n                  <li>\n                    Address: {park.addresses[0].line1} {park.addresses[0].city}{\" \"}\n                    {park.addresses[0].stateCode} {park.addresses[0].postalCode}\n                  </li>\n                  <br />\n                  <li>Latititude: {park.latitude}</li>\n                  <li>Longitude: {park.longitude}</li>\n                </ul>\n              </a>\n            </div>\n\n      )) : null\n      }\n\n    </main>\n  );\n};\n\nexport default Search;\n","C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\pages\\Blogs.js",[],"C:\\Users\\crbns\\Bootcamp\\03-PROJECT\\i-n-t-e-n-t-s\\client\\src\\components\\Background\\index.js",[],["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"122","line":16,"column":3,"nodeType":"119","messageId":"120","endLine":16,"endColumn":9},{"ruleId":"117","severity":1,"message":"123","line":5,"column":9,"nodeType":"119","messageId":"120","endLine":5,"endColumn":17},{"ruleId":"117","severity":1,"message":"124","line":6,"column":9,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"125","line":9,"column":7,"nodeType":"119","messageId":"120","endLine":9,"endColumn":15},{"ruleId":"117","severity":1,"message":"126","line":34,"column":15,"nodeType":"119","messageId":"120","endLine":34,"endColumn":19},{"ruleId":"117","severity":1,"message":"126","line":19,"column":15,"nodeType":"119","messageId":"120","endLine":19,"endColumn":19},{"ruleId":"117","severity":1,"message":"121","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":21},{"ruleId":"117","severity":1,"message":"127","line":10,"column":42,"nodeType":"119","messageId":"120","endLine":10,"endColumn":50},{"ruleId":"117","severity":1,"message":"128","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":12},{"ruleId":"117","severity":1,"message":"129","line":16,"column":8,"nodeType":"119","messageId":"120","endLine":16,"endColumn":13},{"ruleId":"117","severity":1,"message":"130","line":73,"column":7,"nodeType":"119","messageId":"120","endLine":73,"endColumn":16},{"ruleId":"117","severity":1,"message":"131","line":78,"column":7,"nodeType":"119","messageId":"120","endLine":78,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":5,"column":18,"nodeType":"119","messageId":"120","endLine":5,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":102,"column":15,"nodeType":"134","endLine":102,"endColumn":75},{"ruleId":"135","severity":1,"message":"136","line":106,"column":17,"nodeType":"134","endLine":106,"endColumn":78},{"ruleId":"113","replacedBy":"137"},{"ruleId":"115","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'css' is defined but never used.","'Switch' is defined but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'authData' is assigned a value but never used.","'data' is assigned a value but never used.","'Redirect' is defined but never used.","'Auth' is defined but never used.","'Blogs' is defined but never used.","'Container' is assigned a value but never used.","'Backing' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["139"],["140"],"no-global-assign","no-unsafe-negation"]